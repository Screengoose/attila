Template.profile.helpers({  // TODO - refactor  // function profileStat(stat) {  //   if(document.URL.indexOf("profile") >= 0){  //     if (Meteor.user())  //       return Meteor.user().profile.stat;  //     } else {  //       if (Meteor.user()) {  //         var url = window.location.pathname;  //         var id = url.substring(url.lastIndexOf('/') + 1);  //         var user = Meteor.users.find( { _id: id } );  //         if (user.count() == 0)  //           return '';  //           else  //             return user.fetch()[0].profile.stat;  //           }  //         }  // };  //  // username: profileSat (name),  username: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.name;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.name;            }          }        },  nickname: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.nickname;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.nickname;            }          }        },  location: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.location;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.location;            }          }        },  height: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.height;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.height;            }          }        },  weight: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.weight;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.weight;            }          }        },  reach: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.reach;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.reach;            }          }        },  age: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.age;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.age;            }          }        },  fight: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.fight;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.fight;            }          }        },  gender: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.gender;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.gender;            }          }        },  designation: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.designation;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.designation;            }          }        },  weightclass: function() {    if(document.URL.indexOf("profile") >= 0){      if (Meteor.user())        return Meteor.user().profile.weightclass;      } else {        if (Meteor.user()) {          var url = window.location.pathname;          var id = url.substring(url.lastIndexOf('/') + 1);          var user = Meteor.users.find( { _id: id } );          if (user.count() == 0)            return '';            else              return user.fetch()[0].profile.weightclass;            }          }        }});